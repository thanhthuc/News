import 'dart:async';import 'package:news/api_client/api_client.dart';import 'package:news/small_component/published_dropdown_view.dart';import 'package:rxdart/rxdart.dart';import '../../model/news_model.dart';enum HomeTabViewType {  allNews, topNews, technical}abstract class Bloc {  void dispose();}class ListNewsBloc implements Bloc {  final APIClient _apiClient = APIClient();  StreamController<List<News>> listNewsStream = BehaviorSubject();  StreamController<bool> isLoadingStream = BehaviorSubject();  int _currentPage = 1;  DropdownFilterState _sortBy = DropdownFilterState.publishAt;  void fetchListNews() async {    var list = await _apiClient.fetchNews();    listNewsStream.add(list);  }  void fetchTopListNews() async {    var list = await _apiClient.fetchTopNews();    listNewsStream.add(list);  }  void fetchListNewsByPage(int page) async {    _currentPage = page;    var list = await _apiClient.fetchNewsWith(page * 5, _sortBy);    listNewsStream.add(list);  }  void fetchListNewsBySortBy(DropdownFilterState sortBy) async {    _sortBy = sortBy;    var list = await _apiClient.fetchNewsWith(_currentPage * 5, sortBy);    listNewsStream.add(list);  }  void toPreviousPage() async {    _currentPage -= 1;    var list = await _apiClient.fetchNewsWith(_currentPage * 5, _sortBy);    listNewsStream.add(list);  }  void toNextPage() async {    _currentPage += 1;    var list = await _apiClient.fetchNewsWith(_currentPage * 5, _sortBy);    listNewsStream.add(list);  }  @override  void dispose() {    listNewsStream.close();    isLoadingStream.close();  }}