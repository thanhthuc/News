import 'package:flutter/foundation.dart';import 'package:flutter/material.dart';import 'package:news/api_client/api_client.dart';import 'package:news/screens/screen_menu.dart';import 'package:news/screens/search_page.dart';import 'package:news/screens/top_trend_page.dart';import 'package:news/small_component/news_list_view.dart';import 'package:news/small_component/page_number_action_view.dart';import 'package:provider/provider.dart';import '../model/news_model.dart';import '../small_component/published_dropdown_view.dart';import '../small_component/top_main_filter_view.dart';import '../state_management/provider/provider.dart';class MyHomePage extends StatefulWidget {  const MyHomePage({super.key, required this.title});  final String title;  @override  State<MyHomePage> createState() => _MyHomePageState();}class _MyHomePageState extends State<MyHomePage> {  APIClient apiClient = APIClient();  late Future<List<News>> list;  late int _currentPage;  late DropdownFilterState _sortBy;  bool isAllNew = true;  void topTrend() {    setState(() {      isAllNew = false;    });    // Navigate to another page  }  void allNews() {    setState(() {      isAllNew = true;      _currentPage = 1;    });  }  void prev() {    setState(() {      _currentPage -= 1;    });  }  void next() {    setState(() {      _currentPage += 1;    });  }  void pagesNum(int page) {    setState(() {      _currentPage = page;    });  }  @override  void initState() {    // TODO: implement initState    super.initState();    _sortBy = DropdownFilterState.popularity;    _currentPage = 1;    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {      Provider.of<NewsListProvider>(context, listen: false).fetchAllNews();    });    // example provider  }  @override  Widget build(BuildContext context) {    return Scaffold(      drawer: LeftMenu(callback: (action){        //      }),      appBar: AppBar(        title: Text(widget.title),        actions: [IconButton(onPressed: () async {          var result = await showSearch(              context: context,              delegate: CustomSearchDelegate()          );        }, icon: const Icon(Icons.search))],      ),      body:      Container(          color: Colors.grey,          padding: const EdgeInsets.all(20),          child:          Column(            children: <Widget>[              TopMainFilterView(allNewsCallback: allNews, topTrendingCallback: topTrend),              if (isAllNew)              Expanded(child: Column(                children: [                  PageNumberActionView(                      prevCallback: prev,                      nextCallback: next,                      pagesNumCallback: pagesNum),                  Row(children: [                    const Spacer(),                    DropdownCustom(dropdownFilterCallback: (filterState) {                      if (kDebugMode) {                        print("filter: $filterState");                      }                      setState(() {                        _sortBy = filterState;                      });                    },)                  ]),                  Container(height: 20),                  FutureBuilder<List<News>>(                      future: apiClient.fetchNewsWith(                          _currentPage == 0 ? 5 : _currentPage * 5, _sortBy),                      builder: (context, snapshot) {                        if (snapshot.hasError) {                          return const Center(child: Text("Have an error"));                        } else if (snapshot.hasData) {                          return NewsListView(list: snapshot.data!);                        } else {                          return const CircularProgressIndicator();                        }                      }),                ],              )),              if (!isAllNew)                TopTrend()              // Consumer<NewsListProvider>(builder: (context, value, child) {              //   if (value.isLoading) {              //     return const Center(              //       child: CircularProgressIndicator(),              //     );              //   }              //   // Else show list news              //   final newsList = value.listNews;              //   return NewsListView(list: newsList);              // })            ],      )      ),    );  }}